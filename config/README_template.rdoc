## for Rdoc markup syntax and options please see:http://rdoc.sourceforge.net/doc/ EXAMPLE and MARKUP sections

= RightScale *** cookbook

== DESCRIPTION:
Replace this text with a high-level overview of what this cookbook configures or manages.  Don't go into too much detail here, save that for the 'details' section below.

==== Example:
-------------

This cookbook provides abstract 'repo' resource for managing code download from GIT, SVN or ROS code repositories.

== REQUIREMENTS:
=== General

Replace this text with a description of cookbook requirements, what user will have to add to template to make recipes from this cookbook work correctly

What OSs does this support?

Is this cloud specific?  If so, which clouds?

Requires a virtual machine launched from a RightScale-managed RightImage.

==== Example:
-------------

One of 'repo' provider: <tt>repo_git</tt>, <tt>repo_svn</tt> or <tt>repo_ros</tt> cookbooks must be present in your cookbook repository
Ros implementation depends on either the <tt>rs_utils::install_tools</tt> or <tt>rs_tools:default</tt> recipe



== KNOWN LIMITATIONS:
List any known limitation here that might affect functionality and usability. Be sure to include a ticket number.

==== Example:
-------------

Currently only primary backups to Remote Object Storage (ROS) are supported for KVM hypervisors (w-1234)

== SETUP/USAGE:
Describe minimum requred set of actions requred for correct work of recipes from this cookbook.

==== Example:
-------------

Place tomcat::default recipe into your runlist to setup the application server.
When using a RightScale ServerTemplate, this will also automatically add the common attributes to your ServerTemplate inputs.
Set ‘jdbc/ConnDB’ as your datasource name to setup database connection with the application server.


== DETAILS:
=== General

Replace this text with a common information about cookbook elements, and what user need to know if he want to use this cookbook

==== Example:
-------------

This cookbook is intended to be used in conjunction with cookbooks that contain
Lightweight Providers which implement the <tt>repo</tt> interface. See the RightScale
repo_git cookbook for an example.

For more about Lightweight Resources and Providers (LWRPs), please see the Chef
wiki at: http://wiki.opscode.com/display/chef/Lightweight+Resources+and+Providers+%28LWRP%29

=== Attributes:
Describe cookbook attributes here.

You can create subsections to split attributes by their specs Ex: <tt>General</tt> <tt>Apache common</tt>, <tt>Apache worker</tt> etc.

==== Example:
-------------

These are settings used in recipes and templates. Default values are noted.
* <tt>node['apache']['dir']</tt> - Location for the Apache configuration
* <tt>node['apache']['log_dir']</tt> - Location for Apache logs
* <tt>node['apache']['prefork']['startservers']</tt> - initial number of server processes to start. Default is 16.
* <tt>node['apache']['prefork']['minspareservers']</tt> - minimum number of spare server processes. Default 16.

=== Templates:
Describe cookbook templates here.

Format is:

template name - description - recipe/recipes where this tempalte is called

==== Example:
-------------

<b>server.rb.erb</b>

Configuration for the server and server components used in the <tt>chef-server::rubygems-install</tt> recipe.


=== Definitions:
Use this section only if your cookbook contain definitions.

Give complete description of difinition functionality and provide examples of how we use it in recipes.

==== Example:
-------------

<b>apache\_module</b>

Enable or disable an Apache module in <tt>#{node['apache']['dir']}/mods-available</tt> by calling <tt>a2enmod</tt> or <tt>a2dismod</tt> to manage the symbolic link in `#{node['apache']['dir']}/mods-enabled`. If the module has a configuration file, a template should be created in the cookbook where the definition is used. See __Examples__.

Parameters:
* name - Name of the module enabled or disabled with the `a2enmod` or `a2dismod` scripts.
* enable - Default true, which uses `a2enmod` to enable the module. If false, the module will be disabled with `a2dismod`.
* conf - Default false. Set to true if the module has a config file, which will use `apache_conf` for the file.
* filename - specify the full name of the file, e.g.

Examples:

Enable the ssl module, which also has a configuration template in `templates/default/ssl.conf.erb`.

    apache_module "ssl" do
      conf true
    end

=== Libraries-helpers:
Use this section only if your cookbook contain definitions.
Give complete description of library purpose and  functionality. Provide examples of how we use it in recipes.

==== Example:
-------------


<b>RightScale::App::Helper.bind_ip(private_ips = [ ], public_ips = [ ])</b>

Return the IP address of the interface that this application server listens on.

Parameters

* <tt>private_ips(Array)::</tt> List of private ips assigned to the application server
* <tt>public_ips(Array)::</tt> List of public ips assigned to the application server

Returns

<tt>String::</tt> IP Address

Raise

<tt>RuntimeError::</tt> If nether a valid private nor public ip can be found

=== LWRP's:

Use this section only if your cookbook contain resources and/or providers.

* Give common information about LWRP's existing in your cookbook, and point user to common info about Rightscale LWRP's

==== Example:
-------------

The ‘db’ interface is defined by a Lightweight Resource, which can be found in the resources/default.rb file.

For more information about Lightweight Resources and Providers (LWRPs), please see:
 http://support.rightscale.com/12-Guides/Chef_Cookbooks_Developer_Guide/08-Chef_Development/Lightweight_Resources_and_Providers_(LWRP)



* Describe resource purpose and functionality. describe its attributes

==== Example:
-------------

Common attributes

<tt>:destination</tt> - Path to where project repo will be pulled

<tt>:repository</tt> - Repository Url

<tt>:revision</tt> - Remote repo Branch or revision


* Give provider usage examples.

==== Example:
-------------

<b>Update Action</b>

To open a local port to all servers with a given tag use:

  sys_firewall "Open this database's ports to all appservers" do
    machine_tag "appserver:active=true"
    port 3306
    enable true
    action :update
  end

This can be useful as a server is booting to open up access for multiple
systems at once.

<b>Update Request Action</b>

To request all servers with a given tag close a port to a given IP address use:

  sys_firewall "Request all appservers close ports to this loadbalancer" do
    machine_tag "loadbalancer:app=www"
    port 8000
    enable false
    ip_addr node[:cloud][:private_ips][0]
    action :update_request
  end

This can be useful when decommissioning a running server that had previously
requested ports opened.


* all tag based actions are scoped to the deployment

= LICENSE:
