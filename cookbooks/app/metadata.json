{
  "recommendations": {
  },
  "maintainer": "RightScale, Inc.",
  "long_description": "= RightScale App Cookbook\n\n== DESCRIPTION:\n\nRightScale's cookbook for application server management.\n\nThis is an abstract cookbook that defines the recipes and interface to\napplication provider cookbooks.  It is not a standalone cookbook and must be\nused in conjunction with an application provider cookbook (i.e.\n<tt>app_php</tt>, app_tomcat, app_passenger or a user created application\nprovider).\n\nMore detailed information can be found in the descriptions for each recipe in the cookbook. <tt>app::*</tt>.\n\n== REQUIREMENTS:\n\n* Requires a VM launched from a RightScale managed RightImage\n* Requires a corresponding app provider cookbook\n\n== COOKBOOKS DEPENDENCIES:\nPlease see <tt>metadata.rb</tt> file for the latest dependencies.\n\n* <tt>sys_firewall</tt>\n* <tt>rightscale</tt>\n* <tt>repo</tt>\n* <tt>app_php</tt>\n* <tt>app_passenger</tt>\n* <tt>app_tomcat</tt>\n\n== KNOWN LIMITATIONS:\n\nThere are no known limitations.\n\n== SETUP:\n\nIn order to use App resource, you must create corresponding providers in your\napp server cookbook. For examples, see <tt>app_passenger</tt>, <tt>app_php</tt> or\n<tt>app_tomcat</tt> cookbooks.\n\nYou must define app attributes which will be used in the initialized\n<tt>app[default]</tt> resource.\n\nRequired attributes:\n\n  node[:app][:provider] = \"app_passenger\"\n\nRecommended:\n\n  node[:app][:destination]\n  node[:app][:port]\n  node[:app][:root]\n  node[:app][:database_name]\n  node[:app][:database_user]\n  node[:app][:database_password]\n  node[:app][:database_sever_fqdn]\n\nMore detailed descriptions of these attribute variables is located in the resource\nfile's description.\n\n== USAGE:\n\n1. Add the <tt>app_*::default</tt> recipe prior to the <tt>app::default</tt>\n   recipe to define the provider.\n2. Add the default recipe to tag your server as an appserver. This is used by\n   servers (like databases) to identify their clients.\n3. Add desired <tt>app::do_*</tt> recipes to your application server\n   ServerTemplate.\n4. Develop corresponding providers in your application server's cookbook.\n5. Define required and recommended attributes in your application server's\n   cookbook attributes file.\n\n== DETAILS:\n\n=== General\nThis cookbook is can only be used in conjunction with cookbooks that contain\nLightweight Providers which implement the 'app' interface. See the RightScale\n<tt>app_php</tt> cookbook for an example.\n\nNote: <tt>app[default]</tt> resource uses the \"persist true\" flag, which allows you to\nsave the created resource and its attributes in memory for future use.\n\nThis cookbook contains recipes that are required to connect your instance to RightScale's\n\"Load Balancer\" ServerTemplates:\n\n* <tt>do_loadbalancers_allow</tt>\n* <tt>do_loadbalancers_deny</tt>\n* <tt>request_loadbalancer_allow</tt>\n* <tt>request_loadbalancer_deny</tt>\n\nFor more info please see: {Load Balancer Setups}[http://support.rightscale.com/03-Tutorials/HAProxy_Load_Balancer_Server_Setup].\n\n=== Attributes:\n\n* <tt>node[:app][:provider]</tt> - Set a default provider.\n* <tt>node[:app][:port]</tt> - Set a default port to listen on. Default: 8000\n* <tt>node[:app][:ip]</tt> - IP to listen on. Default: First private IP\n\n=== Definitions:\n\n<b>app_add_listen_port</b>\nAdds a port to the apache listen 'ports.conf' file and node attribute.\n\nCreate node[:apache][:listen_ports] - array of strings for the web server to listen on.\n\nThis definition created specifically for the <tt>apache2</tt> cookbook at this time.\n\n===== Example:\n\n app_add_listen_port php_port\n\n\n=== Libraries-helpers:\n\n===== RightScale::App::Helper.bind_ip(private_ips = [ ], public_ips = [ ])\n\nReturns the IP address of the interface that this application server will accept requests from\non the specified listen ports.\n\n<b>Parameters</b>\n\n* <tt>private_ips(Array)::</tt> List of private IP addresses assigned to the application server.\n* <tt>public_ips(Array)::</tt> List of public IP addresses assigned to the application server.\n\n<b>Returns</b>\n\n<tt>String::</tt> IP Address\n\n<b>Raise</b>\n\n<tt>RuntimeError::</tt> If neither a valid private nor public IP address can be found.\n\n\n===== RightScale::App::Helper.bind_port()\n\nReturn the port that this application server listens on.\n\n<b>Returns</b>\n\n<tt>node[:app][:port](integer)</tt> Port number\n\n\n===== RightScale::App::Helper.vhosts(vhost_list)\n\nCreated to convert vhost names into an array from a comma-separated list.\n\n<b>Parameters</b>\n\n<tt>vhost_list(Sting)::</tt> Comma-separated list of virtual hosts.\n\n<b>Returns</b>\n\n<tt>Array::</tt> Array of vhosts\n\n\n=== LWRPs:\n\nThis cookbook provides the abstract <tt>app</tt> resource, which will act as\nan \"interface\" for corresponding Lightweight app_* providers.\n\nThis includes <tt>app_php</tt>, <tt>app_tomcat</tt> and <tt>app_passenger</tt>\ncookbooks. Each of them contains an implementation of the corresponding app__*\nLightweight Provider which can be called using this resource.\n\nTo avoid unexpected failures, the Provider persisted in this cookbook will act as a \ncap if there is no other app_ Light Weight Provider implementation. \n\nFor more information about Lightweight Resources and Providers (LWRPs), please\nsee: {Lightweight Resources and Providers (LWRP)}[http://support.rightscale.com/12-Guides/Chef_Cookbooks_Developer_Guide/08-Chef_Development/Lightweight_Resources_and_Providers_(LWRP)].\n\n\n===== App resource actions\n\nAll actions declared in this resource are intended to act as templates to typical\napplication server setup operations.\n\n* <tt>:install</tt> - Install packages required for application server setup.\n\n* <tt>:setup_vhost</tt> - Action designed to set up APP LWRP with common\n  parameters required for apache vhost file.\n\n* <tt>:start</tt> - Action designed to set up a user defined start sequence for\n  the application server.\n\n* <tt>:stop</tt> - Action designed to set up a user defined stop sequence for\n  the application server.\n\n* <tt>:restart</tt> - Action designed to set up a user defined restart sequence for\n  the application server.\n\n* <tt>:code_update</tt> - Action designed to perform project source code\n  update/download.\n\n* <tt>:setup_db_connection</tt> - Action designed to perform database\n  configuration file creation.\n\n* <tt>:setup_monitoring</tt> - Action designed to set up and install required\n  monitoring software.\n\n\n===== App resource attributes\n\n* <tt>packages</tt> - Set of installed packages\n* <tt>root</tt> - Application root\n* <tt>port</tt> - Application port\n* <tt>destination</tt> - The path in the specified repository where application code will be pulled from\n* <tt>database_name</tt> - Name of the required database\n* <tt>database_user</tt> - Database user\n* <tt>database_password</tt> - Database password\n* <tt>database_sever_fqdn</tt> - Database server's fully qualified domain name (FQDN)\n\n\n===== Usage Examples:\nBelow are a few basic examples. More detailed examples of this resource use can be\nfound in the <tt>do_*</tt> and <tt>setup_*</tt> recipes in the cookbook.\n\n app \"default\" do\n   persist true\nend\n   provider node[:app][:provider]\n   packages node[:app][:packages]\n   action :install\n end\n\n app \"default\" do\n   database_name node[:app][:database_name]\n   database_user node[:app][:database_user]\n   database_password node[:app][:database_password]\n   database_sever_fqdn node[:app][:database_sever_fqdn]\n   action :setup_db_connection\n end\n\n app \"default\" do\n   root node[:app][:root]\n   port node[:app][:port].to_i\n   action :setup_vhost\n end\n\n\n= LICENSE:\n\nCopyright RightScale, Inc. All rights reserved.  All access and use subject to the\nRightScale Terms of Service available at http://www.rightscale.com/terms.php and,\nif applicable, other agreements such as a RightScale Master Subscription Agreement.\n",
  "version": "12.1.0",
  "description": "Common utilities for RightScale managed application servers",
  "suggestions": {
  },
  "attributes": {
    "app/port": {
      "calculated": false,
      "type": "string",
      "default": "8000",
      "description": "The port that the application service is listening on. Example: 8000",
      "display_name": "Application Listen Port",
      "required": "optional",
      "recipes": [
        "app::default",
        "app::handle_loadbalancers_allow",
        "app::handle_loadbalancers_deny"
      ],
      "choice": [

      ]
    },
    "app/db_adapter": {
      "calculated": false,
      "type": "string",
      "default": "mysql",
      "description": "Enter the database adapter which will be used to connect to the database. Example: mysql",
      "display_name": "Database adapter for application",
      "required": "optional",
      "recipes": [
        "app::default"
      ],
      "choice": [
        "mysql",
        "postgresql"
      ]
    },
    "app/database_name": {
      "calculated": false,
      "type": "string",
      "description": "Enter the name of the MySQL database schema to which applications will connect to.  The database schema should have been created when the initial database was first set up.  This input will be used to set the application server's database configuration file so that applications can connect to the correct schema within the database.  This input is also used for MySQL dump backups in order to determine which schema will be backed up.  Example: mydbschema",
      "display_name": "Database Schema Name",
      "required": "required",
      "recipes": [
        "app::setup_db_connection"
      ],
      "choice": [

      ]
    }
  },
  "name": "app",
  "groupings": {
  },
  "replacing": {
  },
  "maintainer_email": "support@rightscale.com",
  "recipes": {
    "app::do_server_start": "Runs application server start sequence.",
    "app::setup_db_connection": "Set up the database connection file. This recipe will call the corresponding provider from app server cookbook, which creates an application database configuration file.",
    "app::do_server_stop": "Runs application server stop sequence.",
    "app::do_update_code": "Updates application source files from the remote repository. This recipe will call the corresponding provider from the app server cookbook, which will download/update application source code.",
    "app::default": "Adds the appserver:active=true, appserver:listen_ip=<ip> and appserver:listen_port=<port> tags to your server which identifies it as an application server and tells the load balancer what IP address and port to connect to. For example, a 'master' database server will update its firewall port permissions to accept incoming requests from application servers with this tag.",
    "app::handle_loadbalancers_allow": "Remote recipe run on app server from loadbalancer requesting access. DO NOT RUN.",
    "app::request_loadbalancer_allow": "Sends a request to all application servers tagged with loadbalancer:app=<applistener_name> to allow connections from the server's private IP address. This script should be run on a load balancer before any application servers are attached to it.",
    "app::do_loadbalancers_allow": "Allows connections from all load balancers within a given listener pool which are tagged with loadbalancer:lb=<applistener_name>.  This script should be run on an application server before it makes a request to be connected to the load balancers.",
    "app::setup_monitoring": "Install collectd monitoring. This recipe will call the corresponding provider from the app server cookbook, which installs and configures required monitoring software.",
    "app::request_loadbalancer_deny": "Sends a request to all application servers tagged with loadbalancer:app=<applistener_name> to deny connections from the server's private IP address. This script should be run on a load balancer after disconnecting application servers or upon decommissioning.",
    "app::handle_loadbalancers_deny": "Remote recipe run on app server from loadbalancer revoking access. DO NOT RUN.",
    "app::do_server_restart": "Runs application server restart sequence.",
    "app::setup_vhost": "Set up the application vhost on port 8000. This recipe will call the corresponding provider from the app server cookbook, which creates an apache vhost file.",
    "app::do_loadbalancers_deny": "Denies connections from all load balancers which are tagged with loadbalancer:lb=<applistener_name>.  For example, you can run this script on an application server to deny connections from all load balancers within a given listener pool.",
    "app::do_server_reload": "Runs application server reload sequence."
  },
  "conflicting": {
  },
  "dependencies": {
    "app_passenger": ">= 0.0.0",
    "rightscale": ">= 0.0.0",
    "sys_firewall": ">= 0.0.0",
    "app_tomcat": ">= 0.0.0",
    "app_php": ">= 0.0.0",
    "repo": ">= 0.0.0"
  },
  "providing": {
  },
  "platforms": {
    "centos": "~> 5.8",
    "ubuntu": "~> 10.04.0",
    "redhat": "~> 5.8"
  },
  "license": "Copyright RightScale, Inc. All rights reserved."
}