{
  "name": "block_device",
  "description": "This cookbook provides the building blocks for Multi-Cloud backup/restore support.",
  "long_description": "# RightScale Block Device Cookbook\n\n## DESCRIPTION:\n\nThis cookbook is available at [https://github.com/rightscale/rightscale_cookbooks](https://github.com/rightscale/rightscale_cookbooks).\n\nThis cookbook provides the building blocks for multi-cloud backup/restore\nsupport. It leverages RightScale's 1.0 and 1.5 API for performing volume\nmanagement across multiple clouds.\n\n## REQUIREMENTS:\n\n* The block device tools depend on the `rightscale::install_tools`\n  recipe.\n* Requires a virtual machine launched from a RightScale-managed RightImage.\n\n## COOKBOOKS DEPENDENCIES:\n\nPlease see `metadata.rb` file for the latest dependencies.\n\n## KNOWN LIMITATIONS:\n\n* Rackspace requires an instance size of 512MB or larger. An instance size of\n  256MB is not supported. (w-3947)\n* Multiple block devices are not supported on Rackspace.\n\n## SETUP/USAGE:\n\n### Getting started and taking the first backup:\n\n1. Import the latest version of 'Storage Toolbox (Chef)' ServerTemplate into\n   your RightScale account.\n2. Set up a new deployment. Add a server into the deployment using the\n   toolbox ServerTemplate and launch the server.\n3. Once the server is operational consider it in a 'pristine state'. Nothing\n   will happen other than installing the tools until you run an operational\n   recipe. You can modify this behavior by cloning the ServerTemplate and\n   changing the list of recipes to run on boot.\n4. Run the \"block_device::setup_block_device\" recipe, which attaches\n   storage based on the volume size and number of volumes you have specified.\n   The storage is located in '/mnt/storage1' by default.\n5. Add your data into /mnt/storage1.\n6. Run the recipe \"block_device::do_primary_backup\". This recipe detects\n   what cloud you are on and performs a backup to the local cloud persistence\n   service.\n\n### Continuous Backups with CRON:\n\n1. Enable continuous backups by running the recipe\n   \"block_device::setup_continuous_backups\". This sets up a cron job.\n2. You can disable backups at any time by running the\n   \"block_device::do_disable_continuous_backups\" recipe, which removes\n   the cron job that was performing backups.\n\n### Force Reset:\n\n1. WARNING: The \"block_device::do_force_reset\" recipe detaches all storage\n   related to your lineage and DESTROYS the volumes! You should only run\n   this recipe if you want to restore your database to a pristine state\n   and do not want to save any of its data. After running the\n   \"block_device::do_force_reset\" recipe you can then run the\n   \"block_device::setup_block_device\" or \"block_device::do_restore\" recipes.\n\n### Restore:\n\n1. Start from a pristine state (fresh launch of a new server or using a server\n   that's been reset).\n2. Run the \"block_device::do_restore\" recipe.\n\nMix and match recipes to get the right combination for your deployments.\n\n### Delete Volumes and Terminate\n\n1. Delete the attached volumes and terminate the server. Note: if this script\n   is not used to terminate the server the volumes will persist.\n\n### Set up ephemeral device\n\n1. To set up ephemeral file systems on clouds supporting ephemeral devices,\n   place the `block_device::setup_ephemeral` recipe in your runlist.\n2. The file system type set up in the ephemeral device can be configured by\n   setting the \"Ephemeral File System Type\" input. By default, this input is\n   set to 'xfs'. NOTE: On RedHat images, this input is ignored and 'ext3' file\n   system is installed by default (RedHat does not support the 'xfs' file system\n   type).\n\n## DETAILS:\n\nMultiple block device support is controlled by the\n`block_device/devices_to_use` input. It can be a comma-separated list of\ndevice names or '*' to indicate all devices. By default, there are two available\nblock devices. Currently, in order to add more block devices you need to\noverride the cookbook. Instructions can be found at: [Increase the Number of\nBlock Devices][Guide]\n\n[Guide]: http://support.rightscale.com/12-Guides/Chef_Cookbooks_Developer_Guide/04-Developer/ServerTemplate_Development/08-Common_Development_Tasks/Increase_the_Number_of_Block_Devices\n\nThe volume nicknames are made unique by appending the RightScale instance's uuid\nto the provided nickname input. In case of \"stop/start\" operation (supported by\ninstances launched with EBS images), the uuid of the first instance before the\n\"stop\" operation is used.\n\n## LICENSE:\n\nCopyright RightScale, Inc. All rights reserved.\nAll access and use subject to the RightScale Terms of Service available at\nhttp://www.rightscale.com/terms.php and, if applicable, other agreements\nsuch as a RightScale Master Subscription Agreement.\n",
  "maintainer": "RightScale, Inc.",
  "maintainer_email": "support@rightscale.com",
  "license": "Copyright RightScale, Inc. All rights reserved.",
  "platforms": {
    "centos": ">= 0.0.0",
    "redhat": ">= 0.0.0",
    "ubuntu": ">= 0.0.0"
  },
  "dependencies": {
    "rightscale": ">= 0.0.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
    "block_device/devices_to_use": {
      "display_name": "Block Device(s) to Operate On",
      "description": "The block device(s) to operate on. Can be a comma-separated list of device names or '*' to indicate all devices. Example: device1",
      "required": "recommended",
      "default": "device1",
      "recipes": [
        "block_device::do_primary_backup",
        "block_device::do_primary_restore",
        "block_device::do_secondary_backup",
        "block_device::do_secondary_restore",
        "block_device::do_primary_backup_schedule_enable",
        "block_device::do_primary_backup_schedule_disable",
        "block_device::setup_block_device",
        "block_device::do_force_reset"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/default/backup/primary/cred/user": {
      "display_name": "Primary Backup User (default)",
      "description": "Primary cloud authentication credentials. For Rackspace Cloud Files, use your Rackspace login username (e.g., cred:RACKSPACE_USERNAME). For OpenStack Swift the format is: 'tenantID:username'. For clouds that do not require primary credentials (e.g., Amazon), set to 'ignore'. Example: cred:CLOUD_ACCOUNT_USERNAME ",
      "required": "recommended",
      "default": "",
      "recipes": [
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/default/backup/primary/cred/secret": {
      "display_name": "Primary Backup Secret (default)",
      "description": "Primary cloud authentication credentials. For Rackspace Cloud Files, use your Rackspace account API key (e.g., cred:RACKSPACE_AUTH_KEY). For clouds that do not require primary credentials (e.g., Amazon), set to 'ignore'. Example: cred:CLOUD_ACCOUNT_KEY",
      "required": "recommended",
      "default": "",
      "recipes": [
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/default/backup/primary/cloud": {
      "display_name": "Primary Backup Storage Cloud (default)",
      "description": "The primary backup storage cloud (complete list of supported storage locations is in input dropdown). This is only used if the server's cloud does not have volume support. Example: s3",
      "required": "optional",
      "choice": [
        "s3",
        "Cloud_Files",
        "Cloud_Files_UK",
        "google",
        "azure",
        "swift",
        "hp",
        "SoftLayer_Dallas",
        "SoftLayer_Singapore",
        "SoftLayer_Amsterdam"
      ],
      "default": "",
      "recipes": [
        "block_device::default"
      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/default/backup/primary/endpoint": {
      "display_name": "Primary Backup Storage Cloud Endpoint URL (default)",
      "description": "The endpoint URL for the primary backup storage cloud. This is used to override the default endpoint or for generic storage clouds such as Swift. Example: http://endpoint_ip:5000/v2.0/tokens",
      "required": "optional",
      "default": "",
      "recipes": [
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/default/backup/secondary/cred/user": {
      "display_name": "Secondary Backup User (default)",
      "description": "Secondary cloud authentication credentials. For Rackspace Cloud Files, use your Rackspace login username (e.g., cred:RACKSPACE_USERNAME). For OpenStack Swift the format is: 'tenantID:username'.  For Amazon S3, use your Amazon key ID (e.g., cred:AWS_ACCESS_KEY_ID). Example: cred:CLOUD_ACCOUNT_USERNAME",
      "required": "recommended",
      "default": "",
      "recipes": [
        "block_device::default",
        "block_device::do_secondary_backup",
        "block_device::do_secondary_restore"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/default/backup/secondary/cred/secret": {
      "display_name": "Secondary Backup Secret (default)",
      "description": "Secondary cloud authentication credentials. For Rackspace Cloud Files, use your Rackspace account API key (e.g., cred:RACKSPACE_AUTH_KEY). For Amazon S3, use your Amazon secret key (e.g., cred:AWS_SECRET_ACCESS_KEY). Example: cred:CLOUD_ACCOUNT_KEY",
      "required": "recommended",
      "default": "",
      "recipes": [
        "block_device::default",
        "block_device::do_secondary_backup",
        "block_device::do_secondary_restore"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/default/backup/secondary/cloud": {
      "display_name": "Secondary Backup Storage Cloud (default)",
      "description": "The secondary backup storage cloud. (See complete list of supported storage locations in input dropdown). Example: s3",
      "required": "recommended",
      "choice": [
        "s3",
        "Cloud_Files",
        "Cloud_Files_UK",
        "google",
        "azure",
        "swift",
        "hp",
        "SoftLayer_Dallas",
        "SoftLayer_Singapore",
        "SoftLayer_Amsterdam"
      ],
      "default": "",
      "recipes": [
        "block_device::default",
        "block_device::do_secondary_backup",
        "block_device::do_secondary_restore"
      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/default/backup/secondary/endpoint": {
      "display_name": "Secondary Backup Storage Cloud Endpoint URL (default)",
      "description": "The endpoint URL for the secondary backup storage cloud. This is used to override the default endpoint or for generic storage clouds such as Swift. Example: http://endpoint_ip:5000/v2.0/tokens",
      "required": "optional",
      "default": "",
      "recipes": [
        "block_device::default",
        "block_device::do_secondary_backup",
        "block_device::do_secondary_restore"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/default/backup/rackspace_snet": {
      "display_name": "Rackspace SNET Enabled for Backup",
      "description": "When 'true', Rackspace internal private networking preferred) (is used for communications between servers and Rackspace Cloud Files. Ignored for all other clouds. Example: true",
      "type": "string",
      "required": "optional",
      "choice": [
        "true",
        "false"
      ],
      "default": "true",
      "recipes": [
        "block_device::default",
        "block_device::do_primary_backup_schedule_enable",
        "block_device::do_primary_backup",
        "block_device::do_secondary_backup",
        "block_device::do_primary_restore",
        "block_device::do_secondary_restore"
      ],
      "calculated": false
    },
    "block_device/ephemeral/vg_data_percentage": {
      "display_name": "Percentage of the ephemeral LVM used for data",
      "description": "The percentage of the total ephemeral Volume Group extents (LVM) that is used for data (e.g. 50 percent - 1/2 used for data, 100 percent - all space is allocated for data). WARNING: Using a non-default value is not recommended. Make sure you understand what you are doing before changing this value. Example: 100",
      "type": "string",
      "required": "optional",
      "choice": [
        "50",
        "60",
        "70",
        "80",
        "90",
        "100"
      ],
      "default": "100",
      "recipes": [
        "block_device::setup_ephemeral"
      ],
      "calculated": false
    },
    "block_device/ephemeral/file_system_type": {
      "display_name": "Ephemeral File System Type",
      "description": "The type of file system that will be installed on the ephemeral device. By default, this input will be set to 'xfs'. This input is ignored on Redhat and Google cloud since we do not support 'xfs' on them. The 'ext3' file system will be set up by default on Redhat and Google cloud. Example: xfs",
      "type": "string",
      "required": "optional",
      "choice": [
        "xfs",
        "ext3"
      ],
      "default": "xfs",
      "recipes": [
        "block_device::setup_ephemeral"
      ],
      "calculated": false
    },
    "block_device/devices/device1/stripe_count": {
      "display_name": "Number of Volumes in the Stripe (1)",
      "description": "The total number of volumes in the volume stripe that will be used by the database. Volumes will be created and mounted to the instance. The default value is 1, which means that only a single volume will be used (no striping). This value is ignored on clouds that do not support volumes (e.g., Rackspace). Example: 1",
      "required": "recommended",
      "default": "1",
      "recipes": [
        "block_device::setup_block_device",
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device1/volume_size": {
      "display_name": "Total Volume Size (1)",
      "description": "Defines the total size of the LVM volume stripe set (in GB). For example, if the stripe_count is '3' and you specify '3' for this input, it will create an LVM volume stripe that contains 3 volumes that are each 1 GB in size. If an uneven ratio is defined, volume sizes will be rounded up to the nearest whole integer. Ignored on clouds that do not support volumes (e.g., Rackspace). Example: 10",
      "required": "recommended",
      "default": "10",
      "recipes": [
        "block_device::setup_block_device",
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device1/backup/lineage": {
      "display_name": "Backup Lineage (1)",
      "description": "The name associated with your primary and secondary database backups. It's used to associate them with your database environment for maintenance, restore, and replication purposes. Backup snapshots will automatically be tagged with this value (e.g. rs_backup:lineage=mysqlbackup). Backups are identified by their lineage name. Note: For servers running on Rackspace, this value also indicates the Cloud Files container to use for storing primary backups. If a Cloud Files container with this name does not already exist, one will automatically be created. Example: prod_db_lineage ",
      "required": "required",
      "recipes": [
        "block_device::do_primary_backup_schedule_enable",
        "block_device::do_primary_backup",
        "block_device::do_secondary_backup",
        "block_device::do_primary_restore",
        "block_device::do_secondary_restore"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device1/nickname": {
      "display_name": "Nickname (1)",
      "description": "The name displayed in the dashboard for volumes and to uniquely identify LVM volume groups. Example: data_storage1",
      "required": "recommended",
      "default": "data_storage1",
      "recipes": [
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device1/backup/lineage_override": {
      "display_name": "Backup Lineage Override",
      "description": "If defined, this will override the input defined for 'Backup Lineage' (block_device/devices/device1/backup/lineage) so that you can restore the volume from another backup that has as a different lineage name. The most recently completed snapshots will be used unless a specific timestamp value is specified for 'Restore Timestamp Override' (block_device/devices/device1/backup/timestamp_override). Example: prod_db_lienage_2",
      "required": "optional",
      "default": "",
      "recipes": [
        "block_device::do_primary_restore",
        "block_device::do_secondary_restore"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device1/backup/timestamp_override": {
      "display_name": "Backup Restore Timestamp Override (1)",
      "description": "Another optional variable to restore from a specific timestamp. Specify a string matching the timestamp tags on the volume snapshot set. You will need to specify the timestamp that's defined by the snapshot's tag (not name). For example, if the snapshot's tag is 'rs_backup:timestamp=1303613371' you would specify '1303613371' for this input. Example: 1303613371",
      "required": "optional",
      "default": "",
      "recipes": [
        "block_device::do_primary_restore",
        "block_device::do_secondary_restore"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device1/backup/primary/cron/minute": {
      "display_name": "Backup Cron Minute (1)",
      "description": "Defines the minute of the hour when the backup will be taken. Use a value of 1-59, or set to 'Ignore' and a random minute will be calculated. Example: 10",
      "required": "optional",
      "default": "",
      "recipes": [
        "block_device::do_primary_backup_schedule_enable"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device1/backup/primary/cron/hour": {
      "display_name": "Backup Cron Hour (1)",
      "description": "Defines the hour when the backup will be taken. Use a value of 1-24, or set to 'Ignore' to create a backup every hour. Example: 10",
      "required": "optional",
      "default": "",
      "recipes": [
        "block_device::do_primary_backup_schedule_enable"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device1/backup/primary/keep/max_snapshots": {
      "display_name": "Backup Max Snapshots (1)",
      "description": "The maximum number of primary backups to keep in addition to those being rotated. Example: 60",
      "required": "optional",
      "default": "60",
      "recipes": [
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device1/backup/primary/keep/daily": {
      "display_name": "Keep Daily Backups (1)",
      "description": "The number of daily primary backups to keep (i.e., rotation size). Example: 14",
      "required": "optional",
      "default": "14",
      "recipes": [
        "block_device::do_primary_backup_schedule_enable",
        "block_device::do_primary_backup",
        "block_device::do_secondary_backup",
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device1/backup/primary/keep/weekly": {
      "display_name": "Keep Weekly Backups (1)",
      "description": "The number of weekly primary backups to keep (i.e., rotation size). Example: 6",
      "required": "optional",
      "default": "6",
      "recipes": [
        "block_device::do_primary_backup_schedule_enable",
        "block_device::do_primary_backup",
        "block_device::do_secondary_backup",
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device1/backup/primary/keep/monthly": {
      "display_name": "Keep Monthly Backups (1)",
      "description": "The number of monthly primary backups to keep (i.e., rotation size). Example: 12",
      "required": "optional",
      "default": "12",
      "recipes": [
        "block_device::do_primary_backup_schedule_enable",
        "block_device::do_primary_backup",
        "block_device::do_secondary_backup",
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device1/backup/primary/keep/yearly": {
      "display_name": "Keep Yearly Backups (1)",
      "description": "The number of yearly primary backups to keep (i.e., rotation size). Example: 2",
      "required": "optional",
      "default": "2",
      "recipes": [
        "block_device::do_primary_backup_schedule_enable",
        "block_device::do_primary_backup",
        "block_device::do_secondary_backup",
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device1/backup/secondary/container": {
      "display_name": "Secondary Backup Storage Container (1)",
      "description": "The secondary backup storage container where the backup will be saved to or restored from. For Amazon S3, use the bucket name. For Rackspace Cloud Files, use the container name. Example: db_backup_bucket",
      "required": "recommended",
      "default": "",
      "recipes": [
        "block_device::default",
        "block_device::do_secondary_backup",
        "block_device::do_secondary_restore"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device1/mount_point": {
      "display_name": "Block Device Mount Directory (1)",
      "description": "The directory of where to mount the block device (e.g., /mnt/storage). Example: /mnt/storage",
      "type": "string",
      "required": "recommended",
      "default": "/mnt/storage1",
      "recipes": [
        "block_device::setup_block_device",
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false
    },
    "block_device/devices/device1/vg_data_percentage": {
      "display_name": "Percentage of the LVM used for data (1)",
      "description": "The percentage of the total Volume Group extents (LVM) that is used for data. (e.g. 50 percent - 1/2 used for data and remainder used for overhead and snapshots, 100 percent - all space is allocated for data (therefore snapshots can not be taken). WARNING: If the space used for data storage is too large, LVM snapshots cannot be performed. Using a non-default value is not recommended. Make sure you understand what you are doing before changing this value.",
      "type": "string",
      "required": "optional",
      "choice": [
        "50",
        "60",
        "70",
        "80",
        "90",
        "100"
      ],
      "default": "90",
      "recipes": [
        "block_device::setup_block_device",
        "block_device::default"
      ],
      "calculated": false
    },
    "block_device/devices/device1/iops": {
      "display_name": "I/O Operations per Second (1)",
      "description": "The input/output operations per second (IOPS) that the volume can support. IOPS is currently only supported on Amazon EC2. Example: 500",
      "type": "string",
      "required": "optional",
      "recipes": [
        "block_device::setup_block_device",
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false
    },
    "block_device/devices/device1/volume_type": {
      "display_name": "Volume Type",
      "description": "The type of the volume - SATA or SSD. This attribute is supported only on Rackspace Open Cloud. Example: SATA",
      "type": "string",
      "required": "optional",
      "choice": [
        "SATA",
        "SSD"
      ],
      "default": "SATA",
      "recipes": [
        "block_device::setup_block_device",
        "block_device::default"
      ],
      "calculated": false
    },
    "block_device/devices/device1/lvm_block_size": {
      "display_name": "LVM Block Size",
      "description": "The 'stripesize' to use for the LVM logical volume.  Should be 1-4x the block size of the XFS Filesystem. Example: 16",
      "required": "optional",
      "choice": [
        "4",
        "8",
        "12",
        "16"
      ],
      "default": "16",
      "recipes": [
        "block_device::setup_block_device",
        "block_device::default"
      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device2/stripe_count": {
      "display_name": "Number of Volumes in the Stripe (2)",
      "description": "The total number of volumes in the volume stripe that will be used by the database. Volumes will be created and mounted to the instance. The default value is 1, which means that only a single volume will be used (no striping). This value is ignored on clouds that do not support volumes (e.g., Rackspace). Example: 1",
      "required": "optional",
      "default": "1",
      "recipes": [
        "block_device::setup_block_device",
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device2/volume_size": {
      "display_name": "Total Volume Size (2)",
      "description": "Defines the total size of the LVM volume stripe set (in GB). For example, if the stripe_count is '3' and you specify '3' for this input, it will create an LVM volume stripe that contains 3 volumes that are each 1 GB in size. If an uneven ratio is defined, volume sizes will be rounded up to the nearest whole integer. Ignored on clouds that do not support volumes (e.g., Rackspace). Example: 10",
      "required": "optional",
      "default": "10",
      "recipes": [
        "block_device::setup_block_device",
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device2/backup/lineage": {
      "display_name": "Backup Lineage (2)",
      "description": "The name associated with your primary and secondary database backups. It's used to associate them with your database environment for maintenance, restore, and replication purposes. Backup snapshots will automatically be tagged with this value (e.g. rs_backup:lineage=mysqlbackup). Backups are identified by their lineage name. Note: For servers running on Rackspace, this value also indicates the Cloud Files container to use for storing primary backups. If a Cloud Files container with this name does not already exist, one will automatically be created. Example: prod_db_lineage ",
      "required": "optional",
      "recipes": [
        "block_device::do_primary_backup_schedule_enable",
        "block_device::do_primary_backup",
        "block_device::do_secondary_backup",
        "block_device::do_primary_restore",
        "block_device::do_secondary_restore"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device2/nickname": {
      "display_name": "Nickname (2)",
      "description": "The name displayed in the dashboard for volumes and to uniquely identify LVM volume groups. Example: data_storage1",
      "required": "optional",
      "default": "data_storage2",
      "recipes": [
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device2/backup/lineage_override": {
      "display_name": "Backup Lineage Override",
      "description": "If defined, this will override the input defined for 'Backup Lineage' (block_device/devices/device2/backup/lineage) so that you can restore the volume from another backup that has as a different lineage name. The most recently completed snapshots will be used unless a specific timestamp value is specified for 'Restore Timestamp Override' (block_device/devices/device2/backup/timestamp_override). Example: prod_db_lienage_2",
      "required": "optional",
      "default": "",
      "recipes": [
        "block_device::do_primary_restore",
        "block_device::do_secondary_restore"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device2/backup/timestamp_override": {
      "display_name": "Backup Restore Timestamp Override (2)",
      "description": "Another optional variable to restore from a specific timestamp. Specify a string matching the timestamp tags on the volume snapshot set. You will need to specify the timestamp that's defined by the snapshot's tag (not name). For example, if the snapshot's tag is 'rs_backup:timestamp=1303613371' you would specify '1303613371' for this input. Example: 1303613371",
      "required": "optional",
      "default": "",
      "recipes": [
        "block_device::do_primary_restore",
        "block_device::do_secondary_restore"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device2/backup/primary/cron/minute": {
      "display_name": "Backup Cron Minute (2)",
      "description": "Defines the minute of the hour when the backup will be taken. Use a value of 1-59, or set to 'Ignore' and a random minute will be calculated. Example: 10",
      "required": "optional",
      "default": "",
      "recipes": [
        "block_device::do_primary_backup_schedule_enable"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device2/backup/primary/cron/hour": {
      "display_name": "Backup Cron Hour (2)",
      "description": "Defines the hour when the backup will be taken. Use a value of 1-24, or set to 'Ignore' to create a backup every hour. Example: 10",
      "required": "optional",
      "default": "",
      "recipes": [
        "block_device::do_primary_backup_schedule_enable"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device2/backup/primary/keep/max_snapshots": {
      "display_name": "Backup Max Snapshots (2)",
      "description": "The maximum number of primary backups to keep in addition to those being rotated. Example: 60",
      "required": "optional",
      "default": "60",
      "recipes": [
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device2/backup/primary/keep/daily": {
      "display_name": "Keep Daily Backups (2)",
      "description": "The number of daily primary backups to keep (i.e., rotation size). Example: 14",
      "required": "optional",
      "default": "14",
      "recipes": [
        "block_device::do_primary_backup_schedule_enable",
        "block_device::do_primary_backup",
        "block_device::do_secondary_backup",
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device2/backup/primary/keep/weekly": {
      "display_name": "Keep Weekly Backups (2)",
      "description": "The number of weekly primary backups to keep (i.e., rotation size). Example: 6",
      "required": "optional",
      "default": "6",
      "recipes": [
        "block_device::do_primary_backup_schedule_enable",
        "block_device::do_primary_backup",
        "block_device::do_secondary_backup",
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device2/backup/primary/keep/monthly": {
      "display_name": "Keep Monthly Backups (2)",
      "description": "The number of monthly primary backups to keep (i.e., rotation size). Example: 12",
      "required": "optional",
      "default": "12",
      "recipes": [
        "block_device::do_primary_backup_schedule_enable",
        "block_device::do_primary_backup",
        "block_device::do_secondary_backup",
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device2/backup/primary/keep/yearly": {
      "display_name": "Keep Yearly Backups (2)",
      "description": "The number of yearly primary backups to keep (i.e., rotation size). Example: 2",
      "required": "optional",
      "default": "2",
      "recipes": [
        "block_device::do_primary_backup_schedule_enable",
        "block_device::do_primary_backup",
        "block_device::do_secondary_backup",
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device2/backup/secondary/container": {
      "display_name": "Secondary Backup Storage Container (2)",
      "description": "The secondary backup storage container where the backup will be saved to or restored from. For Amazon S3, use the bucket name. For Rackspace Cloud Files, use the container name. Example: db_backup_bucket",
      "required": "optional",
      "default": "",
      "recipes": [
        "block_device::default",
        "block_device::do_secondary_backup",
        "block_device::do_secondary_restore"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/devices/device2/mount_point": {
      "display_name": "Block Device Mount Directory (2)",
      "description": "The directory of where to mount the block device (e.g., /mnt/storage). Example: /mnt/storage",
      "type": "string",
      "required": "optional",
      "default": "/mnt/storage2",
      "recipes": [
        "block_device::setup_block_device",
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false
    },
    "block_device/devices/device2/vg_data_percentage": {
      "display_name": "Percentage of the LVM used for data (2)",
      "description": "The percentage of the total Volume Group extents (LVM) that is used for data. (e.g. 50 percent - 1/2 used for data and remainder used for overhead and snapshots, 100 percent - all space is allocated for data (therefore snapshots can not be taken). WARNING: If the space used for data storage is too large, LVM snapshots cannot be performed. Using a non-default value is not recommended. Make sure you understand what you are doing before changing this value.",
      "type": "string",
      "required": "optional",
      "choice": [
        "50",
        "60",
        "70",
        "80",
        "90",
        "100"
      ],
      "default": "90",
      "recipes": [
        "block_device::setup_block_device",
        "block_device::default"
      ],
      "calculated": false
    },
    "block_device/devices/device2/iops": {
      "display_name": "I/O Operations per Second (2)",
      "description": "The input/output operations per second (IOPS) that the volume can support. IOPS is currently only supported on Amazon EC2. Example: 500",
      "type": "string",
      "required": "optional",
      "recipes": [
        "block_device::setup_block_device",
        "block_device::default"
      ],
      "choice": [

      ],
      "calculated": false
    },
    "block_device/devices/device2/volume_type": {
      "display_name": "Volume Type",
      "description": "The type of the volume - SATA or SSD. This attribute is supported only on Rackspace Open Cloud. Example: SATA",
      "type": "string",
      "required": "optional",
      "choice": [
        "SATA",
        "SSD"
      ],
      "default": "SATA",
      "recipes": [
        "block_device::setup_block_device",
        "block_device::default"
      ],
      "calculated": false
    },
    "block_device/devices/device2/lvm_block_size": {
      "display_name": "LVM Block Size",
      "description": "The 'stripesize' to use for the LVM logical volume.  Should be 1-4x the block size of the XFS Filesystem. Example: 16",
      "required": "optional",
      "choice": [
        "4",
        "8",
        "12",
        "16"
      ],
      "default": "16",
      "recipes": [
        "block_device::setup_block_device",
        "block_device::default"
      ],
      "calculated": false,
      "type": "string"
    },
    "block_device/terminate_safety": {
      "display_name": "Terminate Safety",
      "description": "Prevents the accidental running of the block_device::do_teminate_server recipe.The recipe will only run if the input variable is overridden and set to \"off\". Example: text:off",
      "type": "string",
      "required": "recommended",
      "choice": [
        "Override the dropdown and set to \"off\" to really run this recipe"
      ],
      "default": "Override the dropdown and set to \"off\" to really run this recipe",
      "recipes": [
        "block_device::do_delete_volumes_and_terminate_server"
      ],
      "calculated": false
    },
    "block_device/force_safety": {
      "display_name": "Force Reset Safety",
      "description": "Prevents the accidental running of the block_device::do_force_reset recipe. The recipe will only run if the input variable is overridden and set to \"off\". Example: text:off",
      "type": "string",
      "required": "recommended",
      "choice": [
        "Override the dropdown and set to \"off\" to really run this recipe"
      ],
      "default": "Override the dropdown and set to \"off\" to really run this recipe",
      "recipes": [
        "block_device::do_force_reset"
      ],
      "calculated": false
    }
  },
  "groupings": {
    "block_device/devices/default": {
      "title": "Block Device Defaults",
      "description": "Default attributes for all block devices."
    },
    "block_device/devices/device1": {
      "title": "Block Device 1",
      "description": "Attributes for the block device: device1."
    },
    "block_device/devices/device2": {
      "title": "Block Device 2",
      "description": "Attributes for the block device: device2."
    }
  },
  "recipes": {
    "block_device::default": "Sets up input dependencies for use by other cookbooks.",
    "block_device::setup_block_device": "Creates, formats, and mounts a brand new block device on the instance.",
    "block_device::setup_ephemeral": "Creates, formats, and mounts a brand new block device on the instance's ephemeral drives. Does nothing on clouds without ephemeral drives.",
    "block_device::do_primary_backup": {
      "description": "Creates a primary backup in the local cloud where the server is currently running.",
      "thread": "block_backup"
    },
    "block_device::do_primary_restore": "Restores a primary backup from the local cloud where the server is currently running.",
    "block_device::do_secondary_backup": {
      "description": "Creates a secondary backup to the remote cloud specified by block_device/secondary provider",
      "thread": "block_backup"
    },
    "block_device::do_secondary_restore": "Restores a secondary backup from the remote cloud specified by block_device/secondary provider.",
    "block_device::do_primary_backup_schedule_enable": "Enables continuous primary backups by updating the crontab file.",
    "block_device::do_primary_backup_schedule_disable": "Disables continuous primary backups by updating the crontab file.",
    "block_device::do_delete_volumes_and_terminate_server": "Deletes any currently attached volumes from the instance and then terminates the machine. WARNING: Execution of this script will delete any data on your block device!",
    "block_device::do_force_reset": "Unmounts and deletes the attached block device(s) for this lineage. Designed for test and development purposes only. WARNING: Execution of this script will delete any data on your block device!"
  },
  "version": "13.5.0"
}